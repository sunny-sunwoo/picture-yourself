// http://ionicframework.com/docs/theming/

@font-face {
	font-family: "lightFont";
	src: url('../assets/fonts/gotham-light.otf') format('opentype');
}

@font-face {
	font-family: "mediumFont";
	src: url('../assets/fonts/gotham-medium.otf') format('opentype');
}
body {
		color: #333;
	    
	}

	nav {
		position: relative;
		top: 0;
		height: 50px;
		width: 100%;

	}

	#country-item{
		width: 500px;
		margin: auto;
		margin-bottom: 100px;
	}
	/* The container */
	.check-container {
		margin: auto;
		margin-top:10px;
		margin-bottom:70px;
		width: 65%;
		position: relative;
		text-align: left;
	    display: block;
	    padding-left: 35px;
	    cursor: pointer;
	  
	    -webkit-user-select: none;
	    -moz-user-select: none;
	    -ms-user-select: none;
	    user-select: none;
	}

	/* Hide the browser's default checkbox */
	.check-container input {
	    position: absolute;
	    opacity: 0;
	    cursor: pointer;
	    height: 0;
	    width: 0;
	}

	/* Create a custom checkbox */
	.checkmark {

	    position: absolute;
	    top: 0;
	    left: 0;
	    height: 25px;
	    width: 25px;
	    background-color: #eee;
	}

	/* On mouse-over, add a grey background color */
	.check-container:hover input ~ .checkmark {
	    background-color: #ccc;
	}

	/* When the checkbox is checked, add a blue background */
	.check-container input:checked ~ .checkmark {
	    background-color: #666;
	}

	/* Create the checkmark/indicator (hidden when not checked) */
	.checkmark:after {
	    content: "";
	    position: absolute;
	    display: none;
	}

	/* Show the checkmark when checked */
	.check-container input:checked ~ .checkmark:after {
	    display: block;
	}

	/* Style the checkmark/indicator */
	.check-container .checkmark:after {
	    left: 9px;
	    top: 5px;
	    width: 5px;
	    height: 10px;
	    border: solid white;
	    border-width: 0 3px 3px 0;
	    -webkit-transform: rotate(45deg);
	    -ms-transform: rotate(45deg);
	    transform: rotate(45deg);
	}
  .content-div {
    text-align: center;
    margin: auto;
  }
	#title-div {
		
		display: block;
		margin-top:40%;
		margin-left: 80px;
		margin-right: 80px;
	}

	#title-div p {
		font-size: 1.3em;
	}

	#title-div h1 {
		color: RGBA(181, 10, 13, 1.00);
		background-color: white;

	}
	#terms-div {
		margin-top: 30%;

	}
	#terms_and_conds{
		overflow-y: auto;
		padding: 20px;
		background-color: #eee;
		margin:auto;
		margin-top: 30px;
		text-align: left;
		width: 70%;
		height: 300px;
		border-radius: 15px;
	}

	#terms_and_conds p {
		font-size: 1.2em;
		margin: 20px;

	}
	#photo-div {
		margin-top:20%;
	}
	#photo-div img{
		display: block;
		clip-path: circle(180px at center);
		margin: auto;
		
		width:50%;
	}
	#question_1-div {
		margin-top:40%;
	}
	#question_1-div h1{
		font-size: 3.3em;
		padding-bottom: 30px;
	}

	#question_1-div input {
		font-family: "lightFont" !important;
		padding: 20px 35px;
		margin: 10px;
		background-color: white;
		/*color: #555555;*/
		color:RGBA(181, 10, 13, 1.00);
		text-align: center;
		text-decoration: none;
		font-size: 1.5em;
		border: 1px solid RGBA(181, 10, 13, 1.00);
		border-radius: 15px;
	}

	#question_2-div {
		margin-top:30%;

	}
	#question_2-answer-div {
		margin-left: 30px;
		margin-right: 30px;
	}
	#question_2-answer-div button{
		padding:12px !important;
	}
	#question_2-div h1 {
		font-size: 3.3em;
		padding-bottom: 30px;
	}
	#question_2-skip {
		margin-top: 50px;
		margin-left: 40%;
	}

	#instruction-div {
		margin-top: 30%;
		
		width: 90%;
		height: 50%;
		background-image: url('../assets/imgs/instruction_animation.gif'); 
		background-repeat: no-repeat;
		background-position: center;
	}

	#success-div{
		margin-top: 45%;
	}
	
	#success-div h1 {
		color: RGBA(181, 10, 13, 1.00);
	}

	#start-button{
		margin-top:50px;
	}

	
	
	.my-picture {
		position: absolute;
		right:3.6%;
		top: 1.2%;
		
		
	}

	
	.my-backdrop {
		position: relative;
		top: 0px;
		right:0px;
		z-index: 100;
	}
  
  	.ui-button {
  		font-family: "lightFont" !important;
		padding: 20px 35px;
		margin: 10px;
		background-color: white;
		/*color: #555555;*/
		color:RGBA(181, 10, 13, 1.00);
		text-align: center;
		text-decoration: none;
		font-size: 1.5em;
		border: 1px solid RGBA(181, 10, 13, 1.00);
		border-radius: 15px;
	}
	.ui-button:focus {
		outline: none;
	}
	.ui-button:hover {
		background-color: RGBA(181, 10, 13, 1.00);
		color: #fff;
	}
	.nav-button{
		border: none;
		background-color: transparent;
		cursor: pointer;
		outline: none;
	}
	.nav-button img{
		width: 50px;
	}
	.nav-button:focus{
		outline: none;
	}
	.nav-button:hover{
		opacity: 0.5;
	}
	h1 {
		font-family: "mediumFont" !important;
		font-size: 4.3em;
	}

	h2 {
		font-family: "mediumFont" !important;
		font-size: 2.5em;
	}

	label {
		font-family: "lightFont" !important;
		font-size: 1.2em;
	}

	p {
		font-family: "lightFont" !important;
		font-size: 1.5em;
	}
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
